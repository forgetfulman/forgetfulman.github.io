<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2017-04-10T10:26:13+01:00</updated><id>/</id><title type="html">Tech Rambles</title><subtitle>Musings on technology, from software crafstmanship to tech for kids...
</subtitle><entry><title type="html">Reflections on GildedRose</title><link href="/projects/2017/04/09/gildedrose-reflections.html" rel="alternate" type="text/html" title="Reflections on GildedRose" /><published>2017-04-09T11:00:00+01:00</published><updated>2017-04-09T11:00:00+01:00</updated><id>/projects/2017/04/09/gildedrose-reflections</id><content type="html" xml:base="/projects/2017/04/09/gildedrose-reflections.html">&lt;p&gt;The GildedRose project (https://github.com/forgetfulman/GildedRose) can provide some valuable
lessons in the difficulties of maintaining legacy code and how refactoring can simplify application maintenance.
I have also found it useful as a playground for practicing programming techniques and learning
aspects of the chosen language of implementation.&lt;/p&gt;

&lt;p&gt;The goal of my latest exercise was to reduce the maintenance cost for GildedRose, simplifying the addition
of a new Item type.&lt;/p&gt;

&lt;p&gt;To achieve this I turned to the Java Reflections framework, a feature I have seen used effectively in industry 
applications and one that can provide a container in GildedRose in to which strategies for dealing with new
Item types can be dropped.&lt;/p&gt;</content><author><name></name></author><category term="projects" /><summary type="html">The GildedRose project (https://github.com/forgetfulman/GildedRose) can provide some valuable lessons in the difficulties of maintaining legacy code and how refactoring can simplify application maintenance. I have also found it useful as a playground for practicing programming techniques and learning aspects of the chosen language of implementation.</summary></entry><entry><title type="html">Cuboto</title><link href="/kids_tech/2017/04/09/cuboto.html" rel="alternate" type="text/html" title="Cuboto" /><published>2017-04-09T11:00:00+01:00</published><updated>2017-04-09T11:00:00+01:00</updated><id>/kids_tech/2017/04/09/cuboto</id><content type="html" xml:base="/kids_tech/2017/04/09/cuboto.html"></content><author><name></name></author><category term="kids_tech" /><summary type="html"></summary></entry><entry><title type="html">Welcome to Kids Tech!</title><link href="/kids_tech/2017/03/02/welcome.html" rel="alternate" type="text/html" title="Welcome to Kids Tech!" /><published>2017-03-02T10:00:00+00:00</published><updated>2017-03-02T10:00:00+00:00</updated><id>/kids_tech/2017/03/02/welcome</id><content type="html" xml:base="/kids_tech/2017/03/02/welcome.html">&lt;p&gt;As a father of three young boys, the eldest of who is getting into using tablets and playing Minecraft, 
I am on the lookout for kids tech products that can entertain and teach.
In the Kids Tech series of posts I’ll be taking a look at the interesting technology / software products that catch my eye.&lt;/p&gt;</content><author><name></name></author><category term="kids_tech" /><summary type="html">As a father of three young boys, the eldest of who is getting into using tablets and playing Minecraft, I am on the lookout for kids tech products that can entertain and teach. In the Kids Tech series of posts I’ll be taking a look at the interesting technology / software products that catch my eye.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="/general/2017/02/23/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-02-23T22:19:39+00:00</published><updated>2017-02-23T22:19:39+00:00</updated><id>/general/2017/02/23/welcome-to-jekyll</id><content type="html" xml:base="/general/2017/02/23/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>